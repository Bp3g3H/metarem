<?php
/**
 * Created by PhpStorm.
 * User: User
 * Date: 20.7.2018 Ğ³.
 * Time: 20:55 Ñ‡.
 */

namespace app\models;


use app\models\base\ProductBase;
use yii\behaviors\TimestampBehavior;
use yii\db\Expression;

class Product extends ProductBase
{
    public function behaviors()
    {
        return [
            [
                'class' => TimestampBehavior::className(),
                'createdAtAttribute' => 'created_at',
                'updatedAtAttribute' => 'updated_at',
                'value' => new Expression('NOW()'),
            ],
        ];
    }

    public function beforeSave($insert)
    {
        $this->price_for_cutting = $this->price * $this->quantity;
        $this->full_weight = $this->weight * $this->quantity;
        $this->single_price_with_material = $this->price + ($this->weight * $this->material->price);
        $this->full_price = $this->single_price_with_material * $this->quantity;
        $this->price_with_dds = $this->full_price * 1.2;
    }

    public function afterSave($insert, $changedAttributes)
    {
        $order = $this->firm->getOrders()->where('status = :status', [':status' => Order::STATUS_PENDING])->one();

        if (!$order)
        {
            $order = Order::create($this->firm_id);
        }

        OrderList::create($order->id, $this->id);

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}